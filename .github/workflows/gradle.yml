name: CSmart CI/CD with Gradle and Docker

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/csmart-backend:latest .

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/csmart-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            echo "✅ Stopping and removing old container..."
            sudo docker stop csmart-container || true
            sudo docker rm csmart-container || true
            
            echo "✅ Removing old images..."
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/csmart-backend:latest || true

            echo "✅ Pulling latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/csmart-backend:latest

            echo "✅ Running new Docker container..."
            sudo docker run -d --name csmart-container -p 8080:8080 \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e LOCAL_DB_NAME="${{ secrets.RDS_USERNAME }}" \
              -e LOCAL_DB_PW="${{ secrets.RDS_PASSWORD }}" \
              -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
              -e JWT_ACCESS_TOKEN_TIME="${{ secrets.JWT_ACCESS_TOKEN_TIME }}" \
              -e JWT_REFRESH_TOKEN_TIME="${{ secrets.JWT_REFRESH_TOKEN_TIME }}" \
              --restart unless-stopped \
              ${{ secrets.DOCKER_USERNAME }}/csmart-backend:latest
            
            echo "✅ Deployment completed!"
            
            echo "✅ Container status:"
            sudo docker ps | grep csmart-container

